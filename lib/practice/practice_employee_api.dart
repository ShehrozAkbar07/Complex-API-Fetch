// import 'dart:convert';
// import 'package:flutter/material.dart';
// import "package:http/http.dart" as http;

// import 'mode_practice_api_employee.dart';

// class EmployeeFetch extends StatefulWidget {
//   const EmployeeFetch({Key? key}) : super(key: key);

//   @override
//   State<EmployeeFetch> createState() => _EmployeeFetchState();
// }

// class _EmployeeFetchState extends State<EmployeeFetch> {
//   // List<Autogenerated> postList = [];
//   List<Map<String, dynamic>> employeeData = [];

//   // List<Autogenerated> employeeData = [];

//   // @override
//   // void initState() {
//   //   super.initState();
//   //   employeeData = getPostApi();
//   // }
//   Future<void> getPostApi() async {
//     final responce = await http
//         .get(Uri.parse('https://dummy.restapiexample.com/api/v1/employees'));

//     // print(data);
//     if (responce.statusCode == 200) {
//       var data = jsonDecode(responce.body.toString());
//       // print(data);

//       for (Map<String, dynamic> i in data) {
//         employeeData.add(i);
//         print(employeeData.length);
//         // print('yosuf chutia');
//         // print(model);
//       }
//     } else {
//       // throw Exception('Failed to fetch data');
//     }
//     // for (Map<String, dynamic> i in data) {
//     //   postList.add(Employee.fromJson(i));
//     // }
//     //   return postList;
//     // } else {
//     //   return postList;
//     // }
//   }

//   @override
//   Widget build(BuildContext context) {
//     getPostApi();

//     return Scaffold(
//       body: Column(children: [
//         Expanded(
//           child: FutureBuilder(
//               future: getPostApi(),
//               builder: (context, AsyncSnapshot snapshot) {
//                 if (snapshot.connectionState == ConnectionState.waiting) {
//                   return CircularProgressIndicator(); // Loading indicator
//                 }
//                 // else if (snapshot.hasError) {
//                 //   return Text('Error: ${snapshot.error}');
//                 // }
//                 else {
//                   final List<Map<String, dynamic>> data = snapshot.data;

//                   return ListView.builder(
//                       itemCount: employeeData.length,
//                       itemBuilder: (context, index) {
//                         return Center(
//                           child:
//                               Text(employeeData[index]['message'].toString()),
//                         );
//                       });
//                 }
//               }),
//         )
//       ]),
//     );
//   }
// }

import 'dart:convert';

import 'package:flutter/material.dart';
import "package:http/http.dart" as http;

class EmployeeListScreen extends StatefulWidget {
  @override
  _EmployeeListScreenState createState() => _EmployeeListScreenState();
}

class _EmployeeListScreenState extends State<EmployeeListScreen> {
  late Future<List<Map<String, dynamic>>> employeeData;

  // @override
  // void initState() {
  //   super.initState();
  //   employeeData =
  //       fetchEmployeeData(); // Assuming fetchEmployeeData returns a Future
  // }

  Future<List<dynamic>> fetchEmployeeData() async {
    final response = await http
        .get(Uri.parse('https://dummy.restapiexample.com/api/v1/employees'));

    if (response.statusCode == 200) {
      Map<String, dynamic> jsonData = json.decode(response.body);
      return jsonData['data'];

      // final List<dynamic> data = jsonData['data'];
      // print(data);

      // return List<Map<String, dynamic>>.from(data);
    } else {
      throw Exception('Failed to fetch data');
    }
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<List<dynamic>>(
      future: fetchEmployeeData(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return CircularProgressIndicator(); // Loading indicator
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else if (snapshot.hasData) {
          final List<dynamic> data = snapshot.data!;

          return Scaffold(
            body: Column(children: [
              Expanded(
                  child: ListView.builder(
                      itemCount: data.length,
                      itemBuilder: (context, index) {
                        var employee = data[index];
                        return Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                                "Employe Name:${employee['employee_name'].toString()}"),

                            Text(
                                "Employe Salary:${employee['employee_salary'].toString()}"),
                            Text(
                                "Employe Name:${employee['employee_age'].toString()}"),
                            // // Text(
                            // //     "Employe Name:$employee['employee_salary'].toString()"),

                            // Text(
                            //     "Employe Name:${employee['employee_age'].toString()}"),
                            // Text(
                            //     "Employe Age:$employee['employee_age'].toString()"),
                            const SizedBox(
                              height: 20,
                            ),
                            // Text(
                            //     "Employe Name:${employee['employee_age'].toString()}"),
                            // Text(employee['employee_salary'].toString())
                          ],
                        );
                      }))
            ]),
          );
        } else {
          return const Scaffold(
            body: Column(
              children: [Text('No data available')],
            ),
          );
        }
      },
    );
  }
}
